
package background;

import java.awt.Color;
import java.awt.Font;
import java.io.FileReader;
import java.io.PrintStream;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author TRAN VAN TRI
 */
public class information extends javax.swing.JFrame {
    
    //DefaultTableModel model;
    /**
     * Creates new form information
     */

     public information() {
         
        initComponents();
        fomat();
       // this.setLocationRelativeTo(null);
     //   list = new ArrayList<>();
      //  model = (DefaultTableModel) jTable1.getModel();
         jLabel2.setText("The Name :");
         jLabel3.setText("The Password :");
         jLabel4.setText("The Status : ");
       try{
            Scanner sc = new Scanner(new FileReader("usersource.txt"));
             DefaultTableModel model = (DefaultTableModel) inftable.getModel();
            //Ho tro them dong vao Table tren giao dien
            while(sc.hasNext()){
                model.addRow(new Object[]{
                    sc.next(), //Ma
                    sc.next().replace('_', ' '), //Ten
                    sc.next()//Gia
                });
            }
            sc.close();
      }catch(Exception e){
          
      }
     }
     private void fomat(){
         this.setLocationRelativeTo(null);
         setTitle(" Iformation of Emplyee ");
         name.setText("");status.setText("");pass.setText("");
         name.setFont(new Font("Time New Roman",0,15));
         pass.setFont(new Font("Time New Roman",0,15));
         status.setFont(new Font("Time New Roman",0,15));
         name.setForeground(Color.pink);
         pass.setForeground(Color.pink);
         status.setForeground(Color.pink);
         find.setText("FIND");
         find.setForeground(Color.red);
         findinput.setForeground(Color.black);
         findinput.setText("");
        
         jLabel1.setBackground(Color.pink);
        getContentPane().setBackground(new java.awt.Color(204, 166, 166));
        addnew.setText("Add New ");
        addnew.setForeground(Color.green);
        addnew.setFont(new java.awt.Font("ime New Roman",0,20));
        save.setText(" Save ");
        save.setFont(new java.awt.Font("ime New Roman",0,20));
        save.setForeground(Color.yellow);
        save.setBounds(100, 50, 50, 100);
        reset.setText("Reset Box");
        reset.setFont(new java.awt.Font("Time New Roman",0,15));
        reset.setForeground(Color.red);
        reset.setBounds(100,50,50,100);
        update.setText(" Update ");
        update.setForeground(Color.red);
        update.setFont(new Font("Time New Roman",0,20));
        delete.setForeground(Color.red);
        delete.setFont(new Font("ime New Roman",0,20));
        reset.setFont(new Font ("ime New Roman",0,20));
        reset.setForeground(Color.red);
        jLabel2.setText("Name ");
        jLabel2.setFont(new java.awt.Font("ime New Roman",0,15));
        jLabel2.setForeground(Color.red);
        jLabel3.setText("Pass ");
        jLabel3.setFont(new java.awt.Font("ime New Roman",0,15));
        jLabel3.setForeground(Color.red);
        jLabel4.setText("Status ");
        jLabel4.setFont(new java.awt.Font("ime New Roman",5,15));
        jLabel4.setForeground(Color.red);
        delete.setText("delete");
        inftable.setForeground(Color.green);
        inftable.setFillsViewportHeight(true);
        inftable.setOpaque(true);
        inftable.setBackground(Color.PINK);
        inftable.getTableHeader().setOpaque(false);
        inftable.getTableHeader().setBackground(Color.red);
        inftable.getTableHeader().setForeground(Color.yellow);
        inftable.setFont(new Font ("Time New Roman ",Font.BOLD,20));
        inftable.getTableHeader().setFont(new Font ("Time New Roman",Font.BOLD,20));
        
     }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        pass = new javax.swing.JTextField();
        status = new javax.swing.JTextField();
        addnew = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        save = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        inftable = new javax.swing.JTable();
        delete = new javax.swing.JButton();
        update = new javax.swing.JButton();
        find = new javax.swing.JButton();
        findinput = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel1.setText("The Informations Of All Users");

        jLabel3.setText("jLabel3");

        jLabel4.setText("jLabel4");

        name.setText("name");
        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        pass.setText("pass");

        status.setText("status");
        status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusActionPerformed(evt);
            }
        });

        addnew.setText("add new");
        addnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addnewActionPerformed(evt);
            }
        });

        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        inftable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "The Name", "Password", "Status"
            }
        ));
        jScrollPane1.setViewportView(inftable);

        delete.setText("jButton1");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        update.setText("jButton1");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        find.setText("jButton1");
        find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findActionPerformed(evt);
            }
        });

        findinput.setText("findinput");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(285, 285, 285)
                        .addComponent(findinput, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(find)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(update)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(delete)
                                .addGap(26, 26, 26)
                                .addComponent(addnew)
                                .addGap(15, 15, 15)
                                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(77, 77, 77)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(379, 379, 379))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(findinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(find)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(addnew)
                                .addComponent(delete))
                            .addComponent(save, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(update)
                        .addGap(90, 90, 90))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addnewActionPerformed
      DefaultTableModel model = (DefaultTableModel) inftable.getModel();
      int i= model.getRowCount();
      boolean check1 = true;
      for(int j = 0 ; j<i;j++){
          if(name.getText().equals(model.getValueAt(j, 0))){
              check1 = false;
              break;
          }
      }
      if(pass.getText().length()>5&&check1){
            model.addRow(new Object[]{
                name.getText(),
                pass.getText(),
                status.getText()
            });}
      else if(check1 == false&& pass.getText().length()<5) {
          JOptionPane.showMessageDialog(null, "You Must Check Name Again and Password must longger 6 ");}
      else if( pass.getText().length()<5){
          JOptionPane.showMessageDialog(null, "Password must longger 6 ");
      }
      else{
             JOptionPane.showMessageDialog(null, "You Must Check Name Again"); }
        /* employee e = new employee();
       e.setname(name.getText());
       e.setpass(pass.getText());
       e.setstatus(status.getText());
       list.add(e); // them vao danh sach SV
       */// showResult();
    }//GEN-LAST:event_addnewActionPerformed
      /* int i=1;
       public void showResult(){
        employee e = list.get(list.size()-1);
        model.addRow(new Object[]{
             e.getname(), e.getpass(), e.getstatus() 
        });*/
    //}
    private void statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
       name.setText("");
       pass.setText("");
       status.setText("");
    }//GEN-LAST:event_resetActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
 try{
            PrintStream pw = new PrintStream("usersource.txt");
            DefaultTableModel model = (DefaultTableModel) inftable.getModel();
            for(int i=0; i<model.getRowCount(); i++)
                pw.println(
                    model.getValueAt(i, 0)+ "  " +
                    (model.getValueAt(i, 1)+"").replace(' ', '_')+ "\t" +
                    model.getValueAt(i, 2)
                );
            pw.close();
            JOptionPane.showMessageDialog(null, "Lưu dữ liệu thành công!!!!!!!");
        }catch(Exception e){
            
        }        // TODO add your handling code here:
    }//GEN-LAST:event_saveActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
       DefaultTableModel model= (DefaultTableModel) inftable.getModel();
		int i_row = inftable.getSelectedRow();
		int luaChon = JOptionPane.showConfirmDialog(this, "Bạn có chắn chắn xóa dòng đã chọn?");
		if (luaChon == JOptionPane.YES_OPTION) {
			
			model.removeRow(i_row);
                }
    }//GEN-LAST:event_deleteActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        DefaultTableModel model = (DefaultTableModel) inftable.getModel();
                 int i = inftable.getSelectedRow();
                 if(name.getText()!=model.getValueAt(i, 0)&&status.getText().isEmpty()==false){
                  model.setValueAt(name.getText(),i, 0);}
                 if(pass.getText()!=model.getValueAt(i, 1)&&pass.getText().isEmpty()==false)
                  model.setValueAt(pass.getText(),i, 1);
                 if(status.getText()!=model.getValueAt(i, 2)&&status.getText().isEmpty()==false)
                  model.setValueAt(status.getText(),i, 2);
    }//GEN-LAST:event_updateActionPerformed

    private void findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findActionPerformed
        // TODO add your handling code here:
        boolean check = false ;
         DefaultTableModel model = (DefaultTableModel) inftable.getModel();
         inftable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

         int i = model.getRowCount();
       
         for (int j = 0 ;j < i ; j++ ) {
          
            if(findinput.getText().equals(model.getValueAt(j, 0))){
                inftable.setRowSelectionInterval(j, 0);
                name.setText((String) model.getValueAt(j, 0));
                pass.setText((String) model.getValueAt(j, 1));
                status.setText((String) model.getValueAt(j, 2));
                check=true;
            }             
         }if(check==false){
                  JOptionPane.showMessageDialog(null, "Can't Find Out This Information");
         }
         
    }//GEN-LAST:event_findActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new information().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addnew;
    private javax.swing.JButton delete;
    private javax.swing.JButton find;
    private javax.swing.JTextField findinput;
    private javax.swing.JTable inftable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField pass;
    private javax.swing.JButton reset;
    private javax.swing.JButton save;
    private javax.swing.JTextField status;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

}
